/* Generated by dbus-binding-tool; do not edit! */

#include <glib/gtypes.h>
#include <glib/gerror.h>
#include <dbus/dbus-glib.h>

G_BEGIN_DECLS

#ifndef DBUS_GLIB_CLIENT_WRAPPERS_net_jarre_de_the_Xvidcap
#define DBUS_GLIB_CLIENT_WRAPPERS_net_jarre_de_the_Xvidcap

static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
net_jarre_de_the_Xvidcap_stop (DBusGProxy *proxy, GError **error)

{
  return dbus_g_proxy_call (proxy, "Stop", error, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*net_jarre_de_the_Xvidcap_stop_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
net_jarre_de_the_Xvidcap_stop_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(net_jarre_de_the_Xvidcap_stop_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
net_jarre_de_the_Xvidcap_stop_async (DBusGProxy *proxy, net_jarre_de_the_Xvidcap_stop_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "Stop", net_jarre_de_the_Xvidcap_stop_async_callback, stuff, g_free, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
net_jarre_de_the_Xvidcap_start (DBusGProxy *proxy, GError **error)

{
  return dbus_g_proxy_call (proxy, "Start", error, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*net_jarre_de_the_Xvidcap_start_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
net_jarre_de_the_Xvidcap_start_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(net_jarre_de_the_Xvidcap_start_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
net_jarre_de_the_Xvidcap_start_async (DBusGProxy *proxy, net_jarre_de_the_Xvidcap_start_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "Start", net_jarre_de_the_Xvidcap_start_async_callback, stuff, g_free, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
net_jarre_de_the_Xvidcap_pause (DBusGProxy *proxy, GError **error)

{
  return dbus_g_proxy_call (proxy, "Pause", error, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*net_jarre_de_the_Xvidcap_pause_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
net_jarre_de_the_Xvidcap_pause_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(net_jarre_de_the_Xvidcap_pause_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
net_jarre_de_the_Xvidcap_pause_async (DBusGProxy *proxy, net_jarre_de_the_Xvidcap_pause_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "Pause", net_jarre_de_the_Xvidcap_pause_async_callback, stuff, g_free, G_TYPE_INVALID);
}
#endif /* defined DBUS_GLIB_CLIENT_WRAPPERS_net_jarre_de_the_Xvidcap */

G_END_DECLS
